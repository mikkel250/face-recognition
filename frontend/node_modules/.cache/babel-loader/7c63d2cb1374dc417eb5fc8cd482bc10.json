{"ast":null,"code":"var _jsxFileName = \"/home/mikkel250/coding/ztm/face-recognition/src/App.jsx\";\nimport React, { Component } from \"react\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport SignIn from \"./components/SignIn/SignIn\";\nimport Logo from \"./components/Logo/Logo\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport Rank from \"./components/Rank/Rank.jsx\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\nimport Particles from \"react-particles-js\";\nimport { particlesOptions } from \"./particlesjs-config\";\nimport Clarifai from \"clarifai\";\nimport \"./App.css\"; // Require the client\n// initialize with your api key. This will also work in your browser via http://browserify.org/\n\nconst app = new Clarifai.App({\n  apiKey: process.env.REACT_APP_CLARIFAI_API\n});\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      console.log(clarifaiFace);\n      const image = document.getElementById(\"inputImage\");\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      console.log(\"submitted\");\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => this.displayFaceBox(this.calculateFaceLocation(response))).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = () => {\n      this.setState({\n        route: \"home\"\n      });\n    };\n\n    this.state = {\n      input: \"\",\n      imageUrl: \"\",\n      box: {},\n      route: \"signIn\"\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(Navigation, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), this.state.route === \"signIn\" ? React.createElement(SignIn, {\n      onRouteChange: onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(Rank, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      box: this.state.box,\n      imageUrl: this.state.imageUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/mikkel250/coding/ztm/face-recognition/src/App.jsx"],"names":["React","Component","Navigation","SignIn","Logo","ImageLinkForm","Rank","FaceRecognition","Particles","particlesOptions","Clarifai","app","App","apiKey","process","env","REACT_APP_CLARIFAI_API","constructor","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","console","log","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","setState","onInputChange","event","input","target","value","onButtonSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","onRouteChange","route","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport SignIn from \"./components/SignIn/SignIn\";\nimport Logo from \"./components/Logo/Logo\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport Rank from \"./components/Rank/Rank.jsx\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\nimport Particles from \"react-particles-js\";\nimport { particlesOptions } from \"./particlesjs-config\";\nimport Clarifai from \"clarifai\";\n\nimport \"./App.css\";\n\n// Require the client\n\n// initialize with your api key. This will also work in your browser via http://browserify.org/\n\nconst app = new Clarifai.App({\n  apiKey: process.env.REACT_APP_CLARIFAI_API\n});\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      input: \"\",\n      imageUrl: \"\",\n      box: {},\n      route: \"signIn\"\n    };\n  }\n\n  calculateFaceLocation = data => {\n    const clarifaiFace =\n      data.outputs[0].data.regions[0].region_info.bounding_box;\n    console.log(clarifaiFace);\n    const image = document.getElementById(\"inputImage\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - clarifaiFace.right_col * width,\n      bottomRow: height - clarifaiFace.bottom_row * height\n    };\n  };\n\n  displayFaceBox = box => {\n    this.setState({ box: box });\n  };\n\n  onInputChange = event => {\n    this.setState({ input: event.target.value });\n  };\n\n  onButtonSubmit = () => {\n    console.log(\"submitted\");\n    this.setState({ imageUrl: this.state.input });\n    app.models\n      .predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n      .then(response =>\n        this.displayFaceBox(this.calculateFaceLocation(response))\n      )\n      .catch(err => console.log(err));\n  };\n\n  onRouteChange = () => {\n    this.setState({ route: \"home\" });\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <Particles className=\"particles\" params={particlesOptions} />\n        <Navigation />\n        {this.state.route === \"signIn\" ? (\n          <SignIn onRouteChange={onRouteChange} />\n        ) : (\n          <div>\n            <Logo />\n            <Rank />\n            <ImageLinkForm\n              onInputChange={this.onInputChange}\n              onButtonSubmit={this.onButtonSubmit}\n            />\n            <FaceRecognition\n              box={this.state.box}\n              imageUrl={this.state.imageUrl}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}